// Generated by CoffeeScript 1.9.1
(function() {
  'use strict';
  var _,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  _ = function(s) {
    return s;
  };

  window.password_feedback = {
    methods: ['client'],
    _req: null,
    show_feedback: function(input, email, password, bar) {
      if (this._req != null) {
        this._req.abort();
      }
      if (password === '') {
        return bar.html('');
      }
      if (indexOf.call(this.methods, 'client') >= 0) {
        this._get_feedback_client(input, email, password, bar);
      }
      if (indexOf.call(this.methods, 'server') >= 0) {
        return this._get_feedback_server(input, email, password, bar);
      }
    },
    set_feedback: function(bar, n, strength) {
      bar.find("span:lt(" + n + ")").attr('class', "password-feedback-indicator password-feedback-" + strength);
      return bar.find("span:gt(" + n + ")").attr('class', 'password-feedback-indicator');
    },
    compare: function(input, other) {
      if (input.val() === other.val()) {
        this._remove_errors(input);
        return;
      }
      return this._add_error(input, _('not the same as password'));
    },
    show_help: function() {
      if (!jQuery.popover) {
        return;
      }
      return $('.password-feedback-help').popover({
        placement: 'bottom',
        container: 'body',
        html: true,
        content: _('password_help_popover')
      });
    },
    _get_feedback_server: (function(input, email, password, bar) {
      return this._req = jQuery.ajax({
        url: '/password_feedback/password_score',
        type: 'get',
        dataType: 'json',
        data: {
          password: password,
          email: email
        },
        success: function(data) {
          return window.password_feedback.set_feedback(bar, data.n, data.strength);
        }
      });
    }).debounce(200),
    _get_feedback_client: function(input, email, password, bar) {
      var result;
      result = zxcvbn(password, [email].concat(email.split(/[^\w]/)));
      if (result.score === 0) {
        return this.set_feedback(bar, 1, 'weak');
      } else if (result.score === 4) {
        return this.set_feedback(bar, 3, 'strong');
      } else {
        return this.set_feedback(bar, 2, 'ok');
      }
    },
    _add_error: function(input, text) {
      var help;
      input.closest('.form-group').addClass('error has-error');
      help = input.parent().find('.help-block');
      if (help.length) {
        return help.html(text);
      } else {
        return input.after("<span class='help-block'>" + text + "</span>");
      }
    },
    _remove_errors: function(input) {
      input.closest('.form-group').removeClass('error has-error');
      return input.parent().find('.help-block').remove();
    },
    _find_or_add_html: function(input) {
      var wrap;
      if (input.parent().css('position') === 'static') {
        wrap = $('<span></span>').css('position', 'relative');
        input.wrap(wrap);
        return input.parent().append('<div class="password-feedback-x">\n  <div class="password-feedback-bar">\n    <span class="password-feedback-indicator"></span>\n    <span class="password-feedback-indicator"></span>\n    <span class="password-feedback-indicator"></span>\n  </div>\n</div>');
      }
    },
    _bind_feedback_input: function(input) {
      var ref, ref1;
      this._find_or_add_html(input);
      this.show_feedback(input, (ref = input.closest('form').find('input[type=email]')) != null ? (ref1 = ref.val()) != null ? ref1.trim() : void 0 : void 0, input.val(), input.parent().find('.password-feedback-bar'));
      return input.closest('form').find('.password-confirmation').trigger('input');
    },
    _bind_compare_input: function(input) {
      return this.compare(input, $(input.closest('form').find('input[type=password]').not(input).toArray().filter(function(f) {
        return f.name.indexOf('[password]') >= 0;
      })));
    }
  };

  $(document).on('input', '.password-feedback', function() {
    return window.password_feedback._bind_feedback_input($(this));
  });

  $(document).on('input', '.password-confirmation', function() {
    return window.password_feedback._bind_compare_input($(this));
  });

}).call(this);
